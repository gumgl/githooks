#!/bin/bash
#
# This: gets the list of all staged files (not marked as ??)
#		keeps only the path part
#		separates the two paths when a file is renamed because such a change affects both directories
#		removes the quotes if path is quoted by git
#		keeps only the location of each path (i.e. gets rid of file names and files in root)

#CONFIG
before="." # comes before the path
default="/" # replaces the path if we're at the root
after=": " # separates the path and the commit msg


#SCRIPT
paths=`git status --porcelain \
	| sed -r -e '/^\?\?/d' \
		-e 's/^.{3}//' \
		-e 's/ -> /\n/' \
	| sed -r -e 's/^"(.*)"$/\1/' `
best="" # narrowest all-encompassing scope
stop=false

while :; do
	topdir="${paths%%/*}" # remove everything after the first /
	
	if [ "$topdir" == "" ] ; then
		break # there was no /, so we have gone the deepest we can
	fi
	
	count=`echo "$paths" | wc -l` # count the lines
	topdiresc=`echo "$topdir" | sed -e 's/[]\/$*.^|[]/\\\&/g'` # escape the characters for sed to use!
	paths=`echo "$paths" | sed -rn -e "s/^$topdiresc\///p"` # remove topdir from every path
	newcount=`echo "$paths" | wc -l` # count the lines
	
	if [ $count -ne $newcount ] ; then
		break # some paths did not contain topdir, therefore we have found the best path
	fi
	
	best="$best/$topdir" # add top dir to the best
done

if [ "$best" == "" ] ; then # replace path if empty
	best="$default"
fi

echo "location={$best}";

prepend="$before$best$after"

sed -e "1s/^/$prepend/" $1
